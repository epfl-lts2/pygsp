name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies
      run: |
        # Add graph-tool repository for Ubuntu
        echo "deb https://downloads.skewed.de/apt jammy main" | sudo tee /etc/apt/sources.list.d/skewed.list
        sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key 612DEFB798507F25
        sudo apt-get update
        
        # Install system packages
        sudo apt-get install -y \
          python3-graph-tool \
          libqt6-gui6 \
          xvfb \
          libegl1-mesa \
          libxkbcommon-x11-0 \
          libxcb-icccm4 \
          libxcb-image0 \
          libxcb-keysyms1 \
          libxcb-randr0 \
          libxcb-render-util0 \
          libxcb-shape0 \
          libxcb-xfixes0 \
          libxcb-xinerama0

    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml', 'setup.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install --upgrade --upgrade-strategy eager .[dev]

    - name: Link graph-tool from system installation
      run: |
        # Create symlink to system graph-tool installation
        SITE_PACKAGES=$(python -c "import site; print(site.getsitepackages()[0])")
        ln -sf /usr/lib/python3/dist-packages/graph_tool "$SITE_PACKAGES/"

    - name: Set up virtual display
      run: |
        export DISPLAY=:99
        Xvfb :99 -screen 0 800x600x24 > /dev/null 2>&1 &
        echo "DISPLAY=:99" >> $GITHUB_ENV

    - name: Run linting
      run: |
        flake8 --doctests --exclude=doc

    - name: Run tests with coverage
      run: |
        export MPLBACKEND=agg
        coverage run --branch --source pygsp setup.py test
        coverage report
        coverage xml

    - name: Upload coverage to Coveralls
      if: matrix.python-version == '3.11'  # Only upload once
      uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        file: coverage.xml

  docs:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install system dependencies
      run: |
        # Add graph-tool repository for Ubuntu
        echo "deb https://downloads.skewed.de/apt jammy main" | sudo tee /etc/apt/sources.list.d/skewed.list
        sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key 612DEFB798507F25
        sudo apt-get update
        sudo apt-get install -y python3-graph-tool

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install --upgrade --upgrade-strategy eager .[dev,doc]

    - name: Link graph-tool from system installation
      run: |
        SITE_PACKAGES=$(python -c "import site; print(site.getsitepackages()[0])")
        ln -sf /usr/lib/python3/dist-packages/graph_tool "$SITE_PACKAGES/"

    - name: Build documentation
      run: |
        export MPLBACKEND=agg
        sphinx-build -b html -d doc/_build/doctrees doc doc/_build/html
        sphinx-build -b linkcheck -d doc/_build/doctrees doc doc/_build/linkcheck

    - name: Upload documentation artifacts
      uses: actions/upload-artifact@v3
      with:
        name: documentation
        path: doc/_build/html/
